[
  {
    "objectID": "semana13_ejercicios.html",
    "href": "semana13_ejercicios.html",
    "title": "Ejercicios Semana 13",
    "section": "",
    "text": "Material para el ejercicio\n\n\n\nDescarga la carpeta .zip para acceder al material de esta sesi√≥n. Haga click en el siguiente enlace. No olvides unzipear el archivo."
  },
  {
    "objectID": "semana13_ejercicios.html#preparaci√≥n-del-entorno",
    "href": "semana13_ejercicios.html#preparaci√≥n-del-entorno",
    "title": "Ejercicios Semana 13",
    "section": "üì¶ 1. Preparaci√≥n del entorno",
    "text": "üì¶ 1. Preparaci√≥n del entorno\nRecuerda siempre iniciar con la carga de los paquetes necesarios. Si deseas saber a qu√© paquete pertenece una funci√≥n, puedes escribir en la consola ?nombre_de_funci√≥n para consultar la ayuda (en el panel ‚ÄúHelp‚Äù).\n\npacman::____(____, ____, ____, ____)"
  },
  {
    "objectID": "semana13_ejercicios.html#importaci√≥n-de-la-base-de-datos",
    "href": "semana13_ejercicios.html#importaci√≥n-de-la-base-de-datos",
    "title": "Ejercicios Semana 13",
    "section": "üìÅ 2. Importaci√≥n de la base de datos",
    "text": "üìÅ 2. Importaci√≥n de la base de datos\nImporta la base desde el archivo data/datanews.xlsx.\n\ndf <- ____(\"____\")"
  },
  {
    "objectID": "semana13_ejercicios.html#exploraci√≥n-inicial",
    "href": "semana13_ejercicios.html#exploraci√≥n-inicial",
    "title": "Ejercicios Semana 13",
    "section": "üîç 3. Exploraci√≥n inicial",
    "text": "üîç 3. Exploraci√≥n inicial\nExplora la estructura de la base (nombres de columnas, tipos de datos, etc.) usando funciones como names(), head(), tail(), glimpse(), str().\n\n____(____)"
  },
  {
    "objectID": "semana13_ejercicios.html#an√°lisis-descriptivo",
    "href": "semana13_ejercicios.html#an√°lisis-descriptivo",
    "title": "Ejercicios Semana 13",
    "section": "üìä 4. An√°lisis descriptivo",
    "text": "üìä 4. An√°lisis descriptivo\nPodemos comenzar describiendo algunas variables mediante tablas y gr√°ficos. Responde las siguientes preguntas:\n\n¬øCu√°l es la proporci√≥n de noticias falsas y reales?\nPrimero, crea una tabla con frecuencias y porcentajes.\n\ntabla <- df %>%\n  count(____) %>% \n  ____(pct = round(____ / ____(n) * 100))\n\ntabla\n\nLuego, representa la informaci√≥n gr√°ficamente con el tipo de gr√°fico m√°s adecuado.\n\n____(tabla, aes(x = ____, y = ____)) +\n  _____col() +\n  labs(title = \"Gr√°fico 1: Noticias seg√∫n tipo (falsas y reales)\",\n       x = \"____\",\n       y = \"Porcentaje\") +\n  _____minimal()\n\n‚úèÔ∏è Describe brevemente lo que observaste:\n\n\n¬øC√≥mo var√≠a la presencia de im√°genes entre noticias falsas y reales?\nPrimero, construye una tabla de contingencia.\n\ntabla <- ____(____$tiene_imagen, ____$es_fake) %>% \n  prop.____(2)*____\n\ntabla\n\nAhora, grafica la distribuci√≥n.\n\ntabla_plot <- df %>%\n  group_by(____) %>% \n  ____(tiene_imagen) %>%\n  ____(pct = ____(____ / ____(____) * ____))\n\nggplot(____, aes(x = ____, y = ____, fill = ____)) +\n  ____() +\n  coord_flip() +\n  labs(title = \"Gr√°fico 2: Noticias seg√∫n tipo (falsas y reales) por si contienen imagen\",\n       x = \"Tipo\",\n       y = \"____\",\n       fill = \"Contiene imagen\") +\n  _____minimal()\n\n‚úèÔ∏è Describe aqu√≠ lo que observaste:\n\n\n¬øQu√© tendencias se observan en la cantidad de veces que se compartieron las noticias, seg√∫n su tipo (falsas o reales)?\nPrimero, observa las medidas de tendencia central (m√≠nimo, m√°ximo, media, mediana, etc.) para cada grupo.\n\ndf_fake <- df %>% \n  ____(es_fake == \"Fake\")\n\n____(df_fake$fb_compartido)\n\ndf_real <- df %>% \n  ____(es_fake == \"____\")\n\nsummary(____$____)\n\nLuego, genera los gr√°ficos m√°s adecuados.\n\n# Podemos hacer un histograma, por ejemplo\nggplot(____, aes(x = ____)) +\n  ____() +\n  scale_x_log10(labels = label_comma()) + # <1>\n  facet_wrap(~____) +\n  labs(title = \"Gr√°fico 3: N√∫mero de veces que las noticias fueron compartidas seg√∫n tipo (falsas y reales)\",\n       x = \"Veces compartidas\",\n       y = \"Porcentaje\") +\n  _____minimal()\n\n# Tambi√©n podemos hacer un boxplot\nggplot(____, aes(x = ____, y = ____)) +\n  ____() +\n  scale_y_log10(labels = label_comma()) + # <2>\n  labs(\n    title = \"Gr√°fico 3: N√∫mero de veces que las noticias fueron compartidas seg√∫n tipo (falsas y reales)\",\n    x = \"Tipo de noticia\",\n    y = \"Veces compartidas (escala log)\"\n  ) +\n  _____minimal()\n\n\nA√±ade la funci√≥n scale_x_log10 para que el eje x se vuelva logar√≠tmico y permita graficar mejor la amplitud de datos. Necesitar√°s cargar el paquete {scales}.\nA√±ade la funci√≥n scale_y_log10 para que el eje y se vuelva logar√≠tmico y permita graficar mejor la amplitud de datos. Necesitar√°s cargar el paquete {scales}.\n\n‚úèÔ∏è Describe aqu√≠ lo que observaste:"
  },
  {
    "objectID": "semana13_ejercicios.html#prueba-chi-cuadrado-de-independencia",
    "href": "semana13_ejercicios.html#prueba-chi-cuadrado-de-independencia",
    "title": "Ejercicios Semana 13",
    "section": "5. üßê Prueba chi-cuadrado de independencia",
    "text": "5. üßê Prueba chi-cuadrado de independencia\nPor √∫ltimo, evaluaremos si existe relaci√≥n entre dos variables categ√≥ricas. En este caso, queremos conocer si el uso de im√°genes est√° asociado al tipo de noticia. Partimos de la premisa de que la inclusi√≥n de im√°genes en una noticia puede estar relacionada con intentos de captar la atenci√≥n, generar viralidad o aumentar el engagement, especialmente en el caso de las noticias falsas. Adem√°s, las im√°genes podr√≠an utilizarse como estrategia para legitimar la veracidad del contenido.\n\n‚úèÔ∏è Escribe tu hip√≥tesis nula aqu√≠\n\n\nH‚ÇÄ: No existe relaci√≥n entre el tipo de noticia (falsa o real) y la presencia de im√°genes.\nPista: la hip√≥tesis alternativa ser√≠a la siguiente‚Ä¶ #### H‚ÇÅ: Existe relaci√≥n entre el tipo de noticia y la presencia de im√°genes.\nPrimero genera la tabla de frecuencias observadas y esperadas.\n\ntbl <- table(____$____, ____$____)\n____(tbl)$____ %>% \n  prop.table(2) *____\n____(tbl)$____ %>% \n  prop.table(2) *____\n\nAhora, realiza la prueba de chi-cuadrado.\n\n____(tbl)\n____(tbl)$p.value\n\n‚úèÔ∏è Interpreta aqu√≠ los resultados: ‚úèÔ∏è ¬øQu√© indica e valor-p? ‚úèÔ∏è ¬øRechazas o no la hip√≥tesis nula?"
  },
  {
    "objectID": "semana12.html",
    "href": "semana12.html",
    "title": "Clase pr√°ctica Semana 12",
    "section": "",
    "text": "Material para el ejercicio\n\n\n\nDescarga la carpeta .zip para acceder al material de esta sesi√≥n. Haga click en el siguiente enlace. No olvides unzipear el archivo."
  },
  {
    "objectID": "semana12.html#cargar-paquetes",
    "href": "semana12.html#cargar-paquetes",
    "title": "Clase pr√°ctica Semana 12",
    "section": "Cargar paquetes",
    "text": "Cargar paquetes\n\npacman::p_load(rio, dplyr, ggplot2)"
  },
  {
    "objectID": "semana12.html#importaci√≥n-de-data",
    "href": "semana12.html#importaci√≥n-de-data",
    "title": "Clase pr√°ctica Semana 12",
    "section": "Importaci√≥n de data",
    "text": "Importaci√≥n de data\n\ndf &lt;- import(\"data/filmaffinity_dataset_limpio.xlsx\")"
  },
  {
    "objectID": "semana12.html#exploraci√≥n-de-data",
    "href": "semana12.html#exploraci√≥n-de-data",
    "title": "Clase pr√°ctica Semana 12",
    "section": "Exploraci√≥n de data",
    "text": "Exploraci√≥n de data\n\nglimpse(df)\n\nRows: 119,003\nColumns: 11\n$ index        &lt;dbl&gt; 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,‚Ä¶\n$ T√≠tulo       &lt;chr&gt; \"'49-'17\", \"10,000 Years B.C. (C)\", \"1812\", \"20.000 legua‚Ä¶\n$ A√±o          &lt;dbl&gt; 1917, 1916, 1912, 1907, 1909, 1916, 1912, 1916, 1908, 191‚Ä¶\n$ Pa√≠s         &lt;chr&gt; \"Estados Unidos\", \"Estados Unidos\", \"Rusia\", \"Francia\", \"‚Ä¶\n$ Direcci√≥n    &lt;chr&gt; \"Ruth Ann Baldwin\", \"Willis H. O'Brien\", \"Vasili Goncharo‚Ä¶\n$ Reparto      &lt;chr&gt; \"Joseph W. Girard, Leo Pierson, William Dyer, Mattie Witt‚Ä¶\n$ Nota         &lt;dbl&gt; NA, 5.1, NA, 6.0, 5.3, NA, 5.4, NA, 4.6, NA, 5.8, NA, NA,‚Ä¶\n$ `Tipo filme` &lt;chr&gt; \"Pel√≠cula\", \"Cortometraje\", \"Pel√≠cula\", \"Cortometraje\", \"‚Ä¶\n$ G√©nero       &lt;chr&gt; \"Western\", \"Comedia\", \"Drama\", \"Fant√°stico\", \"Comedia\", \"‚Ä¶\n$ Nota_cat     &lt;chr&gt; \"Sin nota\", \"5 a m√°s\", \"Sin nota\", \"5 a m√°s\", \"5 a m√°s\", ‚Ä¶\n$ continente   &lt;chr&gt; \"Am√©rica\", \"Am√©rica\", \"Asia\", \"Europa\", \"Europa\", \"Am√©ric‚Ä¶"
  },
  {
    "objectID": "semana12.html#chi-cuadrado-1",
    "href": "semana12.html#chi-cuadrado-1",
    "title": "Clase pr√°ctica Semana 12",
    "section": "Chi cuadrado",
    "text": "Chi cuadrado\nGeneramos una tabla de frecuencias observadas\n\ndf2 &lt;- df %&gt;% \n  filter(Nota_cat != \"Sin nota\")\ntabla1 &lt;- table(df2$Nota_cat, df2$continente)\nprint(tabla1)\n\n            \n             √Åfrica Am√©rica  Asia Europa Ocean√≠a\n  5 a m√°s       139   22760  6066  18442     459\n  Menos de 5     39   12189  1241   6707     252\n\n\nGeneramos una tabla de frecuencias esperadas\n\ntabla2 &lt;- chisq.test(tabla1)$expected\nprint(tabla2)\n\n            \n               √Åfrica  Am√©rica     Asia    Europa  Ocean√≠a\n  5 a m√°s    124.7569 24495.11 5121.341 17626.468 498.3267\n  Menos de 5  53.2431 10453.89 2185.659  7522.532 212.6733\n\n\nRealizamos la prueba\n\nchisq.test(tabla1)\n\n\n    Pearson's Chi-squared test\n\ndata:  tabla1\nX-squared = 1135.4, df = 4, p-value &lt; 2.2e-16\n\n\nComprobamos con proporciones\n\ntabla1 %&gt;% \n  prop.table(2) %&gt;% \n  round(3)*100\n\n            \n             √Åfrica Am√©rica Asia Europa Ocean√≠a\n  5 a m√°s      78.1    65.1 83.0   73.3    64.6\n  Menos de 5   21.9    34.9 17.0   26.7    35.4"
  },
  {
    "objectID": "semana12.html#carga-de-paquetes",
    "href": "semana12.html#carga-de-paquetes",
    "title": "Clase pr√°ctica Semana 12",
    "section": "Carga de paquetes",
    "text": "Carga de paquetes\n\npacman::p_load(rio, dplyr, tidyr, labelled, tibble, questionr)"
  },
  {
    "objectID": "semana12.html#importaci√≥n-de-base-de-kobotoolbox",
    "href": "semana12.html#importaci√≥n-de-base-de-kobotoolbox",
    "title": "Clase pr√°ctica Semana 12",
    "section": "Importaci√≥n de base de KoboToolbox",
    "text": "Importaci√≥n de base de KoboToolbox\nDebemos primero importar nuestra base de datos descargada desde Kobo.\n\ndf &lt;- import(\"data/base_ejemplo.xlsx\")"
  },
  {
    "objectID": "semana12.html#exploraci√≥n-inicial-de-data",
    "href": "semana12.html#exploraci√≥n-inicial-de-data",
    "title": "Clase pr√°ctica Semana 12",
    "section": "Exploraci√≥n inicial de data",
    "text": "Exploraci√≥n inicial de data\n\nnames(df)\n\n\nglimpse(df)"
  },
  {
    "objectID": "semana12.html#cambio-de-encabezados",
    "href": "semana12.html#cambio-de-encabezados",
    "title": "Clase pr√°ctica Semana 12",
    "section": "Cambio de encabezados",
    "text": "Cambio de encabezados\nCambiar los nombres de variables a nombres m√°s cortos nos permitir√° un mejor manejo de la base.\n\nencabezados &lt;- c('start',\n                 'end',\n                 'P1',\n                 'P2',\n                 'P3',\n                 'P4',\n                 'P4_1',\n                 'P4_2',\n                 'P4_3',\n                 'P4_4',\n                 'P4_5',\n                 'P4_6',\n                 'P4_7',\n                 'P4_8',\n                 '_id',\n                 '_uuid',\n                 '_submission_time',\n                 '_validation_status',\n                 '_notes',\n                 '_status',\n                 '_submitted_by',\n                 '__version__',\n                 '_tags',\n                 '_index')\ndf2 &lt;- df\nnames(df2) &lt;- encabezados"
  },
  {
    "objectID": "semana12.html#configuraci√≥n-de-etiquetas-de-variables",
    "href": "semana12.html#configuraci√≥n-de-etiquetas-de-variables",
    "title": "Clase pr√°ctica Semana 12",
    "section": "Configuraci√≥n de etiquetas de variables",
    "text": "Configuraci√≥n de etiquetas de variables\nAdem√°s del nombre, podemos a√±adir etiquetas a las columnas.\n\netiquetas_columnas &lt;- list(start = 'start',\n                   end = 'end',\n                   P1 = 'T√≠tulo del videojuego',\n                   P2 = 'A√±o de lanzamiento (tr√°iler)',\n                   P3 = 'Empresa',\n                   P4 = 'G√©nero',\n                   P4_1 = 'Shooter',\n                   P4_2 = 'Acci√≥n y aventura',\n                   P4_3 = 'Terror',\n                   P4_4 = 'Plataformas',\n                   P4_5 = 'Simulaci√≥n',\n                   P4_6 = 'Rol',\n                   P4_7 = 'Peleas',\n                   P4_8 = 'Ninguno de los anteriores',\n                   `_id` = '_id',\n                   `_uuid` = '_uuid',\n                   `_submission_time` = '_submission_time',\n                   `_validation_status` = '_validation_status',\n                   `_notes` = '_notes',\n                   `_status` = '_status',\n                   `_submitted_by` = '_submitted_by',\n                   `__version__` = '__version__',\n                   `_tags` = '_tags',\n                   `_index` = '_index')\n\ndf3 &lt;- df2\nvar_label(df3) &lt;- etiquetas_columnas"
  },
  {
    "objectID": "semana12.html#tablas-de-respuesta-m√∫ltiple",
    "href": "semana12.html#tablas-de-respuesta-m√∫ltiple",
    "title": "Clase pr√°ctica Semana 12",
    "section": "Tablas de respuesta m√∫ltiple",
    "text": "Tablas de respuesta m√∫ltiple\n\ndf3 %&gt;% \n  select(starts_with('P4_')) %&gt;% \n  multi.table(., digits = 1) %&gt;% \n  as.data.frame(.) %&gt;% \n  rownames_to_column(. , 'G√©nero') %&gt;%\n  mutate(G√©nero = unlist(etiquetas_columnas[.$G√©nero]))"
  },
  {
    "objectID": "semana11.html",
    "href": "semana11.html",
    "title": "Clase pr√°ctica Semana 11",
    "section": "",
    "text": "Material para el ejercicio\n\n\n\nDescarga la carpeta .zip para acceder al material de esta sesi√≥n. Haga click en el siguiente enlace. No olvides unzipear el archivo."
  },
  {
    "objectID": "semana11.html#cargar-paquetes",
    "href": "semana11.html#cargar-paquetes",
    "title": "Clase pr√°ctica Semana 11",
    "section": "Cargar paquetes",
    "text": "Cargar paquetes\n\npacman::p_load(rio, dplyr, ggplot2)"
  },
  {
    "objectID": "semana11.html#importaci√≥n-de-data",
    "href": "semana11.html#importaci√≥n-de-data",
    "title": "Clase pr√°ctica Semana 11",
    "section": "Importaci√≥n de data",
    "text": "Importaci√≥n de data\n\ndf &lt;- import(\"data/filmaffinity_dataset_limpio.xlsx\")"
  },
  {
    "objectID": "semana11.html#exploraci√≥n-de-data",
    "href": "semana11.html#exploraci√≥n-de-data",
    "title": "Clase pr√°ctica Semana 11",
    "section": "Exploraci√≥n de data",
    "text": "Exploraci√≥n de data\n\nstr(df)\n\n'data.frame':   119003 obs. of  9 variables:\n $ index     : num  0 1 2 3 4 5 6 7 8 9 ...\n $ T√≠tulo    : chr  \"'49-'17\" \"10,000 Years B.C. (C)\" \"1812\" \"20.000 leguas de viaje submarino (C)\" ...\n $ A√±o       : num  1917 1916 1912 1907 1909 ...\n $ Pa√≠s      : chr  \"Estados Unidos\" \"Estados Unidos\" \"Rusia\" \"Francia\" ...\n $ Direcci√≥n : chr  \"Ruth Ann Baldwin\" \"Willis H. O'Brien\" \"Vasili Goncharov, Kai Hansen, Aleksandr Uralsky\" \"Georges M√©li√®s\" ...\n $ Reparto   : chr  \"Joseph W. Girard, Leo Pierson, William Dyer, Mattie Witting, George C. Pearce, Jean Hersholt, Donna Drew\" NA \"Pavel Knorr, Vasili Goncharov, Aleksandra Goncharova, Andrej Gromov, V. Serjozhinikov, A. Veskov\" \"Georges M√©li√®s\" ...\n $ Nota      : num  NA 5.1 NA 6 5.3 NA 5.4 NA 4.6 NA ...\n $ Tipo filme: chr  \"Pel√≠cula\" \"Cortometraje\" \"Pel√≠cula\" \"Cortometraje\" ...\n $ G√©nero    : chr  \"Western\" \"Comedia\" \"Drama\" \"Fant√°stico\" ..."
  },
  {
    "objectID": "semana11.html#gr√°fico-de-barras",
    "href": "semana11.html#gr√°fico-de-barras",
    "title": "Clase pr√°ctica Semana 11",
    "section": "Gr√°fico de barras",
    "text": "Gr√°fico de barras\n\n¬øQu√© variable podemos representar con un gr√°fico de barras?\nAntes de graficar, vamos a crear una tabla de frecuencias y porcentajes usando count y mutate, como ya hemos aprendido. Esta tabla se usar√° como base para construir los gr√°ficos con el paquete {ggplot2}.\nEste paquete funciona por capas: cada capa agrega elementos o configuraciones al gr√°fico. Empezaremos con una estructura b√°sica para generar gr√°ficos de barras, uniendo las capas con el s√≠mbolo +.\n\ntab_bars &lt;- df %&gt;%\n  count(`Tipo filme`) %&gt;% \n  mutate(pct = n / sum(n) * 100)\n\n1ggplot(tab_bars, aes(x = `Tipo filme`, y = pct)) +\n2  geom_col()\n\n\n1\n\nEn la funci√≥n ggplot existe el argumento data donde ingresamos nuestro objeto tab_bars. Los elementos que deseamos graficar van en la funci√≥n aes.\n\n2\n\nIndicamos el tipo de gr√°fico con geom_col().\n\n\n\n\n\n\n\n\n\n\n\nProbemos a√±adir m√°s capas para personalizar el gr√°fico y hacerlo m√°s visualmente claro y llamativo\n\n1ggplot(tab_bars, aes(x = `Tipo filme`, y = pct)) +\n2  geom_col(fill = \"steelblue\") +\n3  labs(title = \"Gr√°fico 1: Tipo de filme (%)\",\n       x = \"Tipo de filme\",\n       y = \"Porcentaje\") +\n4  theme_minimal()\n\n\n1\n\nDentro de la funci√≥n ggplot, ingresamos en el argumento data nuestro objeto tab_bars. Los elementos que deseamos graficar van en la funci√≥n aes.\n\n2\n\nIndicamos el tipo de gr√°fico con geom_col(). Agregamos el argumento fill para indicar el color que rellenar√° las barras.\n\n3\n\nCon labs (abreviatura de labels), indicamos etiquetas para el t√≠tulo y ejes x e y.\n\n4\n\ntheme_minimal nos da una visualizaci√≥n m√°s limpia quitando el fondo gris.\n\n\n\n\n\n\n\n\n\n\n\nLa versatilidad de {ggplot2} nos permite personalizar distintas combinaciones.\n\n1ggplot(tab_bars, aes(x = `Tipo filme`, y = pct, fill = `Tipo filme`)) +\n2  geom_col() +\n3  labs(title = \"Gr√°fico 1: Tipo de filme (%)\",\n       x = \"Tipo de filme\",\n       y = \"Porcentaje\") +\n4  coord_flip() +\n5  theme_minimal() +\n6  scale_fill_brewer(palette = \"Set3\")\n\n\n1\n\nDentro de la funci√≥n ggplot, ingresamos en el argumento data nuestro objeto tab_bars. Los elementos que deseamos graficar van en la funci√≥n aes.\n\n2\n\nIndicamos el tipo de gr√°fico con geom_col().\n\n3\n\nCon labs (abreviatura de labels), indicamos etiquetas para el t√≠tulo y ejes x e y.\n\n4\n\ncoord_flip gira los ejes para darnos barras horizontales.\n\n5\n\ntheme_minimal nos da una visualizaci√≥n m√°s limpia quitando el fondo gris.\n\n6\n\nEn scale_fill_brewer indicamos una paleta de colores para usar.\n\n\n\n\n\n\n\n\n\n\n\nTambi√©n podemos cruzar variables.\n\ndf2 &lt;- df %&gt;% \n1  mutate(Nota_cat =\n           case_when(Nota &lt; 5 ~ \"Menos de 5\",\n                     Nota &gt;= 5 ~ \"5 a m√°s\",\n                     is.na(Nota) ~ \"Sin nota\"),\n2         Nota_cat =\n           factor(Nota_cat, \n                  levels = c(\"Sin nota\", \"5 a m√°s\", \"Menos de 5\"),\n                  ordered = TRUE))\n\ntab_bars2 &lt;- df2 %&gt;%\n3  group_by(`Tipo filme`) %&gt;%\n  count(Nota_cat) %&gt;% \n  mutate(pct = round(n / sum(n) * 100, 0))\n\n4ggplot(tab_bars2, aes(x = `Tipo filme`, y = pct, fill = Nota_cat)) +\n5  geom_col() +\n6  labs(title = \"Gr√°fico 1: Tipo de filme (%)\",\n       x = \"Tipo de filme\",\n       y = \"Porcentaje\") +\n7  geom_text(aes(label = pct), position = position_stack(vjust = 0.5)) +\n8  theme_minimal() +\n9  scale_fill_brewer(palette = \"Set3\")\n\n\n1\n\nCreamos una variable categ√≥rica a partir de Nota con mutate y case_when.\n\n2\n\nVolvemos nuestra variable Nota_cat un factor ordenado para ordenar las categor√≠as.\n\n3\n\nCreamos nuestra tabla y a√±adimos la funci√≥n group_by para calcular las frecuencias de Nota_cat dentro de cada tipo de filme.\n\n4\n\nDentro de la funci√≥n ggplot, ingresamos en el argumento data nuestro objeto tab_bars2. Los elementos que deseamos graficar van en la funci√≥n aes. A√±adimos en aes el argumento fill para colorear individualmente cada categor√≠a de Nota_cat.\n\n5\n\nIndicamos el tipo de gr√°fico con geom_col().\n\n6\n\nCon labs (abreviatura de labels), indicamos etiquetas para el t√≠tulo y ejes x e y.\n\n7\n\ngeom_text sirve para colocar las etiquetas de los valores.\n\n8\n\ntheme_minimal nos da una visualizaci√≥n m√°s limpia quitando el fondo gris.\n\n9\n\nEn scale_fill_brewer indicamos una paleta de colores para usar."
  },
  {
    "objectID": "semana11.html#histograma",
    "href": "semana11.html#histograma",
    "title": "Clase pr√°ctica Semana 11",
    "section": "Histograma",
    "text": "Histograma\n¬øQu√© variable podemos representar con un histograma?\n\n1ggplot(df, aes(x = A√±o)) +\n2  geom_histogram(fill = \"steelblue\") +\n3  labs(title = \"Gr√°fico 2: A√±o de estre√±o de filmes\",\n       x = \"A√±o\",\n       y = \"Frecuencia\") +\n4  theme_minimal()\n\n\n1\n\nDentro de la funci√≥n ggplot, ingresamos en el argumento data nuestro objeto df y los elementos que deseamos graficar en la funci√≥n aes (solamente usamos el argumento x en este caso).\n\n2\n\nIndicamos el tipo de gr√°fico con geom_histogram(). Agregamos el argumento fill para indicar el color que rellenar√° las barras.\n\n3\n\nCon labs (abreviatura de labels), indicamos etiquetas para el t√≠tulo y ejes x e y.\n\n4\n\ntheme_minimal nos da una visualizaci√≥n m√°s limpia quitando el fondo gris.\n\n\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\nUna capa que nos permite cruzar la informaci√≥n para una visualizaci√≥n desagregada es facet_wrap.\n\n1ggplot(df, aes(x = A√±o)) +\n2  geom_histogram(fill = \"steelblue\") +\n3  facet_wrap(~ `Tipo filme`, scales = \"free\") +\n4  labs(title = \"Gr√°fico 2: A√±o de estre√±o de filmes\",\n       x = \"A√±o\",\n       y = \"Cantidad\") +\n5  theme_minimal()\n\n\n1\n\nDentro de la funci√≥n ggplot, ingresamos en el argumento data nuestro objeto df y los elementos que deseamos graficar en la funci√≥n aes (solamente usamos el argumento x en este caso).\n\n2\n\nIndicamos el tipo de gr√°fico con geom_histogram(). Agregamos el argumento fill para indicar el color que rellenar√° las barras.\n\n3\n\nEsta funci√≥n divide en facetas por grupo. Colocamos la variable de grupos despu√©s del s√≠mbolo ~.\n\n4\n\nCon labs (abreviatura de labels), indicamos etiquetas para el t√≠tulo y ejes x e y.\n\n5\n\ntheme_minimal nos da una visualizaci√≥n m√°s limpia quitando el fondo gris.\n\n\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`."
  },
  {
    "objectID": "semana11.html#box-plot",
    "href": "semana11.html#box-plot",
    "title": "Clase pr√°ctica Semana 11",
    "section": "Box Plot",
    "text": "Box Plot\n¬øQu√© variable podemos representar con un box plot?\n\n1ggplot(df, aes(y = Nota, x = `Tipo filme`, fill = `Tipo filme`)) +\n2  geom_boxplot(show.legend = F) +\n3  scale_fill_brewer(palette = \"Set3\")\n\n\n1\n\nDentro de la funci√≥n ggplot, ingresamos en el argumento data nuestro objeto df. Los elementos que deseamos graficar van en la funci√≥n aes.\n\n2\n\nIndicamos el tipo de gr√°fico con geom_boxplot(). Ocultamos la leyenda con F en el argumento show.legend.\n\n3\n\nEn scale_fill_brewer indicamos una paleta de colores para usar."
  },
  {
    "objectID": "semana10.html",
    "href": "semana10.html",
    "title": "Clase pr√°ctica Semana 10",
    "section": "",
    "text": "Material para el ejercicio\n\n\n\nDescarga la carpeta .zip para acceder al material de esta sesi√≥n. Haga click en el siguiente enlace. No olvides unzipear el archivo.\n\n\n\nIntroducci√≥n\n¬øC√≥mo funciona R?\n\n‚ÄúTodo lo que existe en R es un objeto, todo lo que sucede en R es una funci√≥n.‚Äù\n-John Chambers\n\nR es un lenguaje de programaci√≥n que tradicionalmente opera como funciones anidadas. Por ejemplo:\n\nsupermercado &lt;- c(\"manzana\", \"pera\", \"uva\")\ngsub(\"a\", \"A\", paste(\"mi\", supermercado))\n\n[1] \"mi mAnzAnA\" \"mi perA\"    \"mi uvA\"    \n\n\nSe podr√≠a comparar con una matrioska o mu√±eca rusa en la medida en que una funci√≥n encapsula a otra funci√≥n y as√≠ sucesivamente ejecut√°ndose de adentro hacia afuera.\nLa manera moderna de programar en R es utilizando el operador %&gt;% o pipeta. El mismo ejemplo se ver√≠a as√≠:\n\nlibrary(dplyr)\nsupermercado &lt;- c(\"manzana\", \"pera\", \"uva\")\nsupermercado %&gt;% \n  paste(\"mi\", .) %&gt;% \n  gsub(\"a\", \"A\", .)\n\n[1] \"mi mAnzAnA\" \"mi perA\"    \"mi uvA\"    \n\n\nLa pipeta se puede importar desde el paquete {dplyr} y se puede comparar con una tuber√≠a que pasa el resultado hacia la siguiente funci√≥n, es decir, primero llamamos al objeto supermercado y luego aplicamos la funci√≥n paste, y luego aplicamos la funci√≥n gsub. Esta manera de programar se lee de arriba a abajo. El atajo para escribir la pipeta es ctrl + shift + m\nEn la pr√°ctica utilizaremos una combinaci√≥n de la manera tradicional y moderna al momento de programar en R.\n\n\nPreparaci√≥n\nPara iniciar un proyecto de R nos dirigiremos a la pesta√±a\nFile &gt; New Project &gt; New Directory &gt; New Project &gt; Create Project\nLuego creamos un nuevo archivo R markdown (.Rmd), nos dirigimos a la pesta√±a\nFile &gt; New File &gt; R Markdown &gt; Ok\nPara crear un bloque de c√≥digo en R podemos hacer click en el √≠cono verde con la letra C en la barra superior o utilizar el atajo ctrl + alt + i\nAhora instalamos los paquetes necesarios para el ejercicio de hoy.\n\ninstall.packages(\"pacman\")\npacman::p_load(tidyverse, rio)\n\n\n\nLa funci√≥n p_load() del paquete {pacman} se utiliza para importar paquetes desde el repositorio virtual CRAN.\n\n\nImportaci√≥n de data\nEn esta clase, se importa la base de datos filmaffinity que contiene informaci√≥n sobre filmes publicados entre 1900 y 2020. Para mayor informaci√≥n revise el enlace.\n\nfilmaffinity &lt;- rio::import(\"data/filmaffinity_dataset.xlsx\")\n\n\n\nLa funci√≥n import() del paquete {rio} se utiliza para importar bases de datos en distintos formatos como .xlsx, .csv, .sav, entre otras.\n\n\nExploraci√≥n de data\nUna vez importada la base de datos a la sesi√≥n, es necesario explorarla para familiarizarnos con la informaci√≥n.\n\nfilmaffinity\n\n\n  \n\n\n\nLa base de filmes cuenta con 119,003 observaciones y 9 variables.\n\nfilmaffinity %&gt;% \n  count(`Tipo filme`)\n\n\n  \n\n\n\nLa mayor√≠a de observaciones corresponden al tipo filme con 73,651 observaciones.\n\nglimpse(filmaffinity)\n\nRows: 119,003\nColumns: 9\n$ ...1         &lt;dbl&gt; 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,‚Ä¶\n$ T√≠tulo       &lt;chr&gt; \"'49-'17\", \"10,000 Years B.C. (C)\", \"1812\", \"20.000 legua‚Ä¶\n$ A√±o          &lt;dbl&gt; 1917, 1916, 1912, 1907, 1909, 1916, 1912, 1916, 1908, 191‚Ä¶\n$ Pa√≠s         &lt;chr&gt; \"Estados Unidos\", \"Estados Unidos\", \"Rusia\", \"Francia\", \"‚Ä¶\n$ Direcci√≥n    &lt;chr&gt; \"Ruth Ann Baldwin\", \"Willis H. O'Brien\", \"Vasili Goncharo‚Ä¶\n$ Reparto      &lt;chr&gt; \"Joseph W. Girard, Leo Pierson, William Dyer, Mattie Witt‚Ä¶\n$ Nota         &lt;chr&gt; \"--\", \"5,1\", \"--\", \"6,0\", \"5,3\", \"--\", \"5,4\", \"--\", \"4,6\"‚Ä¶\n$ `Tipo filme` &lt;chr&gt; \"Pel√≠cula\", \"Cortometraje\", \"Pel√≠cula\", \"Cortometraje\", \"‚Ä¶\n$ G√©nero       &lt;chr&gt; \"Western\", \"Comedia\", \"Drama\", \"Fant√°stico\", \"Comedia\", \"‚Ä¶\n\n\nEn la base de datos se tienen las variables ...1, T√≠tulo, A√±o, Pa√≠s, Direcci√≥n, Reparto, Nota, Tipo filme, G√©nero.\n\n\nLimpieza de data\nLa primera columna que corresponde al index del filme en la tabla no tiene un nombre inteligible, por lo que procedemos a renombrar esta columna.\n\nfilmaffinity2 &lt;- \n  filmaffinity %&gt;% \n1  rename(index = 1)\n\nfilmaffinity2\n\n\n1\n\nRenombrar la variable de la posici√≥n 1.\n\n\n\n\n\n  \n\n\n\nLa variable Nota actualmente figura como character en vez de numeric dado que el punto decimal est√° representado como una , y los valores perdidos como --. Ajustemos esta variable para poder utilizarla como variable num√©rica.\n\nfilmaffinity3 &lt;- \n  filmaffinity2 %&gt;% \n  mutate(\n1    Nota = gsub(\",\", \".\", Nota),\n2    Nota = gsub(\"--\", NA, Nota),\n3    Nota = as.numeric(Nota),\n  )\nfilmaffinity3\n\n\n1\n\nReemplazar el s√≠mbolo , por . en la columna Nota.\n\n2\n\nReemplazar el s√≠mbolo -- por el valor perdido NA en la columna Nota.\n\n3\n\nConvertir la columna Nota a variable num√©rica.\n\n\n\n\n\n  \n\n\n\nLuego de aplicar este proceso podemos realizar operaciones aritm√©ticas con la variable Nota:\n\ntab1 &lt;- \n  filmaffinity3 %&gt;% \n  group_by(`Tipo filme`) %&gt;% \n  summarise(Nota_promedio = mean(Nota, na.rm =T))\ntab1\n\n\n  \n\n\n\nEl promedio de los filmes, considerando los puntuados, para el caso de miniserie es de 6.10.\nEn el caso de Estados Unidos, si se genera la misma tabla de frecuencias, se obtendr√≠a el siguiente resultado:\n\ntab2 &lt;- \n  filmaffinity3 %&gt;% \n1  filter(Pa√≠s %in% c(\"Estados Unidos\")) %&gt;%\n  group_by(`Tipo filme`) %&gt;% \n  summarise(Nota_promedio = mean(Nota, na.rm =T))\ntab2\n\n\n1\n\nSe filtra el valor \"Estados Unidos\" en la variable Pa√≠s.\n\n\n\n\n\n  \n\n\n\nSe observa que, para el caso de miniseries, descendi√≥ a 5.99.\n\n\nExportaci√≥n de data\nFinalmente, para exportar la tabla inicial sobre la nota promedio de los filmes a excel se puede utilizar la siguiente funci√≥n del paquete {rio}:\n\ntab1 %&gt;% \n  rio::export(\"data/tab1.xlsx\")\n\n\n\nLa funci√≥n export() del paquete {rio} se utiliza para exportar bases de datos en distintos formatos como .xlsx, .csv, .sav, entre otras.\nUsaremos el mismo procedimiento para exportar la base que limpiamos:\n\nfilmaffinity3 %&gt;% \n  rio::export(\"data/filmaffinity_dataset_limpio.xlsx\")\n\n\n\nEjercicio final\nResponda las siguientes preguntas:\n\nCu√°l es la pel√≠cula m√°s antigua de Estados Unidos, Per√∫, Chile, Espa√±a\nCu√°l es el puntaje promedio por tipo de estos pa√≠ses."
  },
  {
    "objectID": "doc2.html",
    "href": "doc2.html",
    "title": "doc2",
    "section": "",
    "text": "Hi"
  },
  {
    "objectID": "clasep2.html",
    "href": "clasep2.html",
    "title": "Clase pr√°ctica 2",
    "section": "",
    "text": "intro al r\npaquetes\nimportaci√≥n de data\nexploraci√≥n de data\nmanipulaci√≥n de data\nTablas de frecuencia\nexportacion de data\nVisualizaci√≥n de datos: ggplot2, plotly\nintro al rmd\n\nformatos de output: html, pdf, word\nCombinando texto, tablas, gr√°ficos\nResultado: elaboraci√≥n de reportes\n\neste es un cambio dr√°stico"
  },
  {
    "objectID": "clasep2.html#temas",
    "href": "clasep2.html#temas",
    "title": "Clase pr√°ctica 2",
    "section": "",
    "text": "intro al r\npaquetes\nimportaci√≥n de data\nexploraci√≥n de data\nmanipulaci√≥n de data\nTablas de frecuencia\nexportacion de data\nVisualizaci√≥n de datos: ggplot2, plotly\nintro al rmd\n\nformatos de output: html, pdf, word\nCombinando texto, tablas, gr√°ficos\nResultado: elaboraci√≥n de reportes\n\neste es un cambio dr√°stico"
  },
  {
    "objectID": "doc1.html",
    "href": "doc1.html",
    "title": "doc1",
    "section": "",
    "text": "hola."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Acerca de",
    "section": "",
    "text": "En esta p√°gina podr√°s encontrar recursos para las clases de programaci√≥n del curso."
  },
  {
    "objectID": "semana10_teoria.html",
    "href": "semana10_teoria.html",
    "title": "Clase te√≥rica Semana 10",
    "section": "",
    "text": "peliculas=c(\"driver\",\"mike7\",\"destinofinal\",\"frozen\",\"flow\")\na√±o=c(2011,2025,2000,2013,2024)\ngenero=c(\"accion\",\"cienciafiction\",\"terror\",\"animacion\",\"animacion\")\n\n\ndata=data.frame(peliculas,a√±o,genero)\n\n\nlibrary(rio)\n#export(data,\"peliculas.csv\") #csv delimitado por comas\n#export(data,\"peliculas.xlsx\") #xlsx para guarr un archivo en excel\n\n\ndata2=import(\"data/Base_Peliculas_Disney-2.sav\")\n\n\nnames(data2)\n\n[1] \"titulo_pelicula\"          \"fecha\"                   \n[3] \"antig√ºedad\"               \"genero\"                  \n[5] \"mpaa_rating\"              \"total_gross\"             \n[7] \"inflation_adjusted_gross\" \"genero2\"                 \n[9] \"mpaa_rating2\"            \n\n\n\nnames(data2)[6] &lt;- \"ingresos\" \n\n\ntail(data2)\n\n\n  \n\n\n\n\nstr(data2)\n\n'data.frame':   579 obs. of  9 variables:\n $ titulo_pelicula         : chr  \"Snow White and the Seven Dwarfs\" \"Pinocchio\" \"Fantasia\" \"Song of the South\" ...\n  ..- attr(*, \"format.spss\")= chr \"A40\"\n  ..- attr(*, \"display_width\")= int 40\n $ fecha                   : Date, format: \"1937-12-21\" \"1940-02-09\" ...\n $ antig√ºedad              : num  84.9 82.8 82 76 72.7 ...\n  ..- attr(*, \"format.spss\")= chr \"F18.15\"\n  ..- attr(*, \"display_width\")= int 16\n $ genero                  : chr  \"Musical\" \"Adventure\" \"Musical\" \"Adventure\" ...\n  ..- attr(*, \"format.spss\")= chr \"A19\"\n  ..- attr(*, \"display_width\")= int 19\n $ mpaa_rating             : chr  \"G\" \"G\" \"G\" \"G\" ...\n  ..- attr(*, \"format.spss\")= chr \"A9\"\n  ..- attr(*, \"display_width\")= int 9\n $ ingresos                : num  1.85e+08 8.43e+07 8.33e+07 6.50e+07 8.50e+07 ...\n  ..- attr(*, \"format.spss\")= chr \"F12.10\"\n  ..- attr(*, \"display_width\")= int 12\n $ inflation_adjusted_gross: num  5.23e+09 2.19e+09 2.19e+09 1.08e+09 9.21e+08 ...\n  ..- attr(*, \"format.spss\")= chr \"F13.11\"\n  ..- attr(*, \"display_width\")= int 12\n $ genero2                 : num  10 3 10 3 8 3 8 8 5 5 ...\n  ..- attr(*, \"format.spss\")= chr \"F2.0\"\n  ..- attr(*, \"display_width\")= int 9\n  ..- attr(*, \"labels\")= Named num [1:12] 2 3 4 5 6 7 8 9 10 11 ...\n  .. ..- attr(*, \"names\")= chr [1:12] \"Action\" \"Adventure\" \"Black Comedy\" \"Comedy\" ...\n $ mpaa_rating2            : num  5 5 5 5 5 NA 5 NA 5 NA ...\n  ..- attr(*, \"format.spss\")= chr \"F1.0\"\n  ..- attr(*, \"display_width\")= int 14\n  ..- attr(*, \"labels\")= Named num [1:5] 1 2 3 4 5\n  .. ..- attr(*, \"names\")= chr [1:5] \"R\" \"PG-13\" \"PG\" \"Not Rated\" ...\n\n\n\ntable(data2$genero)\n\n\n                                 Action           Adventure        Black Comedy \n                 17                  40                 129                   3 \n             Comedy Concert/Performance         Documentary               Drama \n                182                   2                  16                 114 \n             Horror             Musical     Romantic Comedy   Thriller/Suspense \n                  6                  16                  23                  24 \n            Western \n                  7 \n\n\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\ntabla_frecuencia = data2 %&gt;%\n  count(genero) %&gt;% \n  filter(!genero %in% \"\") #removemos valores perdidos\ntabla_frecuencia\n\n\n  \n\n\n\n\ntabla_porcentajes= data2 %&gt;%\n  count(genero) %&gt;% \n  filter(!genero %in% \"\") %&gt;% #removemos valores perdidos\n  mutate(porcentaje = n / sum(n) * 100)  # Calculamos el porcentaje\ntabla_porcentajes\n\n\n  \n\n\n\n\nlibrary(ggplot2)\nggplot(tabla_porcentajes, aes(x=genero,y=porcentaje, fill=genero))+\n  geom_bar(stat = \"identity\")+\n    coord_flip()+\n  labs(title = \"Gr√°fico de barras de porcentaje de peliculas por Genero\",\n       x = \"Genero\",\n       y = \"Porcentaje\") +\n  theme_minimal() +  # Tema minimalista\n  scale_fill_brewer(palette = \"Set3\") \n\n\n\n\n\n\n\n\n\ntabla_porcentajes2= data2 %&gt;%\n  count(mpaa_rating) %&gt;%\n  filter(!mpaa_rating %in% \"\") %&gt;% #removemos valores perdidos\n  mutate(porcentaje = n / sum(n) * 100)  # Calculamos el porcentaje\ntabla_porcentajes2\n\n\n  \n\n\n\n\nlibrary(ggplot2)\nggplot(tabla_porcentajes2, aes(x=mpaa_rating,y=porcentaje, fill=mpaa_rating))+\n  geom_bar(stat = \"identity\")+\n    coord_flip()+\n  labs(title = \"Gr√°fico de barras de porcentaje de peliculas por MPAA\",\n       x = \"MPAA\",\n       y = \"Porcentaje\") +\n  theme_minimal() +  # Tema minimalista\n  scale_fill_brewer(palette = \"Set3\") \n\n\n\n\n\n\n\n\n\nmean(data2$ingresos)\n\n[1] 64701789\n\n\n\nsummary(data2$ingresos)\n\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n        0  12788864  30702446  64701789  75709033 936662225 \n\n\n\ndata2$antig√ºedad=as.numeric(data2$antig√ºedad)\n\n\nsummary(data2$antig√ºedad)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  5.849  16.714  24.145  24.297  29.582  84.890 \n\n\n\nggplot(data2,aes(x=antig√ºedad))+\n  geom_histogram()\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\n\nggplot(data2,aes(y=antig√ºedad,x=genero))+\n  geom_boxplot() +\n  coord_flip()"
  },
  {
    "objectID": "semana11_teoria.html",
    "href": "semana11_teoria.html",
    "title": "Clase te√≥rica Semana 11",
    "section": "",
    "text": "library(rio)\nlibrary(dplyr)\nlibrary(scales)\ndata=import(\"data/MDb Top Rated Titles.xlsx\")\n\ndata=data %&gt;% \n  filter(!is.na(type)) # removemos valores perdidos en la variable type\n\n\ntabla_porcentajes= data %&gt;%\n  count(type) %&gt;%\n mutate(porcentaje = n / sum(n) * 100)  # Calculamos el porcentaje\ntabla_porcentajes\n\n\n  \n\n\n\n\nlibrary(ggplot2)\nggplot(tabla_porcentajes, aes(x=type,y=porcentaje, fill=type))+\n  geom_bar(stat = \"identity\")+\n    coord_flip()+\n  labs(title = \"Gr√°fico de barras de porcentaje de peliculas por tipo\",\n       x = \"tipo\",\n       y = \"Porcentaje\") +\n  geom_text(aes(label=round(porcentaje,1)), vjust=-0.3) +\n  theme_minimal() +  # Tema minimalista\n  scale_fill_brewer(palette = \"Set3\") \n\n\n\n\n\n\n\n\n\nnames(data)\n\n[1] \"id\"            \"title\"         \"type\"          \"genres\"       \n[5] \"averageRating\" \"numVotes\"      \"releaseYear\"  \n\n\n\ntabla_edescriptivos=data%&gt;%\n  summarise(promedio=mean(averageRating,na.rm=T),\n            mediana=median(averageRating,na.rm=T),\n            minimo=min(averageRating,na.rm=T),\n            maximo=max(averageRating,na.rm=T),\n            desviacion=sd(averageRating,na.rm=T))\n\ntabla_edescriptivos\n\n\n  \n\n\n\n\ntabla_edescriptivos=data%&gt;%\n  group_by(type)%&gt;%\n  summarise(promedio=mean(averageRating,na.rm=T),\n            mediana=median(averageRating,na.rm=T),\n            minimo=min(averageRating,na.rm=T),\n            maximo=max(averageRating,na.rm=T),\n            desviacion=sd(averageRating,na.rm=T))\n\ntabla_edescriptivos\n\n\n  \n\n\n\n\nlibrary(ggplot2)\nggplot(data,aes(y=averageRating,x=type))+\n  geom_boxplot()\n\n\n\n\n\n\n\n\n\nlibrary(ggplot2)\nggplot(data,aes(y=numVotes,x=type))+\n  geom_boxplot()\n\n\n\n\n\n\n\n\n\ntable(data$type)\n\n\n       movie tvMiniSeries     tvSeries \n        4105          278         1650 \n\n\n\nggplot(data, aes(x = averageRating, fill = type)) +\n  geom_histogram() +\n  facet_wrap(~ type, scales = \"free\") +  # Divide en facetas por grupo\n  labs(title = \"Histogramas de Variable Num√©rica por Grupo\",\n       x = \"Valor\", y = \"Frecuencia\") \n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\n\nggplot(data, aes(x = numVotes, fill = type)) +\n  geom_histogram() +\n  facet_wrap(~ type, scales = \"free\") +  # Divide en facetas por grupo\n  scale_x_continuous(n.breaks = 3, labels = label_number()) + # especificar 2 cortes en eje x y evitar numeros en notacion cientifica\n  labs(title = \"Histogramas de Variable Num√©rica por Grupo\",\n       x = \"Valor\", y = \"Frecuencia\") \n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\n\nggplot(data, aes(x = averageRating, fill = type)) +\n  geom_histogram(binwidth = 2, alpha = 0.6, position = \"identity\", color = \"black\") +\n  labs(title = \"Histograma de Variable Num√©rica por Grupo\",\n       x = \"Valor\", y = \"Frecuencia\") +\n  theme_minimal() +\n  scale_fill_manual(values = c(\"movie\" = \"red\", \"tvMiniSeries\" = \"blue\", \"tvSeries\" = \"green\"))  # Colores por grupo"
  },
  {
    "objectID": "semana12_teoria.html",
    "href": "semana12_teoria.html",
    "title": "Clase te√≥rica Semana 12",
    "section": "",
    "text": "library(rio)\ndata=import(\"data/Data_ejemplo_comunica.xlsx\")\n\n\nnames(data)\n\n[1] \"N\"                               \"Nivel de procastinacion\"        \n[3] \"RedSocial\"                       \"Tiempo en redes sociales\"       \n[5] \"Le gusta Leer\"                   \"Numero de interacciones diarias\"\n[7] \"Numero de Seguidores\"           \n\n\n\ntabla1=table(data$`Nivel de procastinacion`,data$RedSocial)\nprint(tabla1)\n\n       \n        Instagram Tiktok Twitter\n  Alto         20     33      15\n  Bajo         20     15      30\n  Medio        22     20      25\n\n\n\nchisq.test(table(data$`Nivel de procastinacion`,data$RedSocial))$expected\n\n       \n        Instagram Tiktok Twitter\n  Alto      21.08  23.12   23.80\n  Bajo      20.15  22.10   22.75\n  Medio     20.77  22.78   23.45\n\n\n\nchisq.test(tabla1)$expected\n\n       \n        Instagram Tiktok Twitter\n  Alto      21.08  23.12   23.80\n  Bajo      20.15  22.10   22.75\n  Medio     20.77  22.78   23.45\n\n\n\nchisq.test(tabla1)\n\n\n    Pearson's Chi-squared test\n\ndata:  tabla1\nX-squared = 12.638, df = 4, p-value = 0.01319\n\n\nHipotesis nula: No hay asociaci√≥n entre el nivel de procastinacion y la red social m√°s consumida. Dado que el p-valor es menor que 0.05, rechazo la Hip√≥tesis nula.\nEn conclusi√≥n a un 95% de nivel de confianza,si est√° asociados el nivel de procastinaci√≥n con la red social m√°s consumida.\n\naddmargins(prop.table(tabla1,2)*100)\n\n       \n        Instagram    Tiktok   Twitter       Sum\n  Alto   32.25806  48.52941  21.42857 102.21605\n  Bajo   32.25806  22.05882  42.85714  97.17403\n  Medio  35.48387  29.41176  35.71429 100.60992\n  Sum   100.00000 100.00000 100.00000 300.00000\n\n\n\nlibrary(dplyr)\n\n\ntabla2 = tabla1 %>%\n  prop.table(2)%>%\n  round(3)*100 \ntabla2\n\n       \n        Instagram Tiktok Twitter\n  Alto       32.3   48.5    21.4\n  Bajo       32.3   22.1    42.9\n  Medio      35.5   29.4    35.7\n\n\n\ntabla3=as.data.frame(tabla2)\n\n\nlibrary(forcats)\ntabla3$Var1 <- fct_relevel(tabla3$Var1, \"Alto\", \"Medio\", \"Bajo\")\n\n\nlibrary(ggplot2)\nggplot(data=tabla3, aes(x=Var2,y=Freq,fill=Var1))+\n  geom_bar(position = \"stack\",stat = \"identity\")+\n  geom_text(aes(label=paste(round(Freq,0), \"%\", sep=\"\")), \n            position = position_stack(), vjust=1, size = 3)+\n  labs(x=\"Red Social\", y=\"Porcentaje\", fill=\"Nivel de procastinaci√≥n\")+\n  scale_fill_manual(values = c(\"#CD3333\",\"pink\", \"bisque\"))"
  },
  {
    "objectID": "semana13_teoria.html",
    "href": "semana13_teoria.html",
    "title": "Clase te√≥rica Semana 13",
    "section": "",
    "text": "Abrir la base de datos\n\nlibrary(rio)\ndata=import(\"data/Data_ejemplo_comunica.xlsx\")\n\n\nnames(data)\n\n[1] \"N\"                               \"Nivel de procastinacion\"        \n[3] \"RedSocial\"                       \"Tiempo en redes sociales\"       \n[5] \"Le gusta Leer\"                   \"Numero de interacciones diarias\"\n[7] \"Numero de Seguidores\"           \n\n\n\n\nPrueba T de student\n\nt.test(`Tiempo en redes sociales` ~ `Le gusta Leer`, data = data)\n\n\n    Welch Two Sample t-test\n\ndata:  Tiempo en redes sociales by Le gusta Leer\nt = 20.31, df = 170.27, p-value < 2.2e-16\nalternative hypothesis: true difference in means between group NO and group SI is not equal to 0\n95 percent confidence interval:\n 160.4916 195.0484\nsample estimates:\nmean in group NO mean in group SI \n          277.61            99.84 \n\n\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(lsr)\ntabla=data%>%\n  group_by(`Le gusta Leer`)%>%\n  summarise(\n  promedio=mean(`Tiempo en redes sociales`),\n  linferior=ciMean(`Tiempo en redes sociales`)[1],\n    lsuperior=ciMean(`Tiempo en redes sociales`)[2]\n)\n\ntabla\n\n\n\n  \n\n\n\n\n\nGr√°fico de prueba T\n\nlibrary(ggplot2)\nggplot(tabla, aes(x = `Le gusta Leer`, y = promedio)) +\n  geom_errorbar(aes(ymin = linferior, ymax = lsuperior), width = 0.2) +\n  labs(x = \"Le gusta leer o no\", y = \"Media ¬± IC 95%\") +\n  theme_minimal()\n\n\n\n\n\n\nPrueba Anova\n\nanova=aov(`Numero de Seguidores` ~`RedSocial`,data=data)\n\nsummary(anova)\n\n             Df  Sum Sq Mean Sq F value Pr(>F)    \nRedSocial     2 1470386  735193     153 <2e-16 ***\nResiduals   197  946705    4806                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\nGr√°fico de prueba Anova\n\nlibrary(dplyr)\nlibrary(lsr)\ntabla=data%>%\n  group_by(`RedSocial`)%>%\n  summarise(\n  promedio=mean(`Numero de Seguidores`),\n  linferior=ciMean(`Numero de Seguidores`)[1],\n    lsuperior=ciMean(`Numero de Seguidores`)[2]\n  \n)\n\ntabla\n\n\n\n  \n\n\n\n\nlibrary(ggplot2)\nggplot(tabla, aes(x = RedSocial, y = promedio)) +\n  geom_errorbar(aes(ymin = linferior, ymax = lsuperior), width = 0.2) +\n  labs(x = \"Grupo\", y = \"Media ¬± IC 95%\") +\n  theme_minimal()\n\n\n\n\n\n\nPrueba de Correlaci√≥n\n\ncor.test(data$`Numero de Seguidores`,data$`Numero de interacciones diarias`)\n\n\n    Pearson's product-moment correlation\n\ndata:  data$`Numero de Seguidores` and data$`Numero de interacciones diarias`\nt = 20.181, df = 198, p-value < 2.2e-16\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.7690670 0.8610325\nsample estimates:\n      cor \n0.8202829 \n\n\n\n\nGr√°fico de dispersi√≥n\n\nlibrary(ggplot2)\n\nggplot(data, aes(x = `Numero de Seguidores`, y = `Numero de interacciones diarias`)) +\n  geom_point() +\n  labs(title = \"Diagrama de dispersi√≥n\", x = \"Eje X\", y = \"Eje Y\") +\n  theme_minimal()"
  },
  {
    "objectID": "semana14_teoria.html",
    "href": "semana14_teoria.html",
    "title": "Clase te√≥rica Semana 14",
    "section": "",
    "text": "Ejercicio de creaci√≥n de indicadores\nLa base de datos Derechos y legalidad LGBT+ por pa√≠s a nivel mundial, que incluye informaci√≥n sobre los siguientes aspectos:\n\nActividad sexual entre personas del mismo sexo: si est√° permitida o penalizada legalmente.\nReconocimiento de uniones entre personas del mismo sexo: por ejemplo, uniones civiles o sociedades de convivencia.\nMatrimonio entre personas del mismo sexo: si est√° legalmente permitido.\nAdopci√≥n por parejas del mismo sexo: si pueden adoptar hijos legalmente.\nPersonas LGBT en el servicio militar: si las personas LGBT pueden servir abiertamente en las fuerzas armadas.\nLeyes contra la discriminaci√≥n por orientaci√≥n sexual: si existen normas que protegen a las personas de ser discriminadas por ser LGBT.\nLeyes sobre identidad y/o expresi√≥n de g√©nero: si existen leyes que reconocen o regulan el derecho a la identidad de g√©nero o expresi√≥n de g√©nero (por ejemplo, para personas trans).\n\n\n\nAbrir la base de datos\n\nlibrary(rio)\ndata=import(\"lgbtq_rights_by_country.csv\")\n\n\nnames(data)\n\n[1] \"Territory\"                                             \n[2] \"Same-sex sexual activity\"                              \n[3] \"Recognition of same-sex unions\"                        \n[4] \"Same-sex marriage\"                                     \n[5] \"Adoption by same-sex couples\"                          \n[6] \"LGBT people allowed to serve openly in military?\"      \n[7] \"Anti-discrimination laws concerning sexual orientation\"\n[8] \"Laws concerning gender identity/expression\"            \n\n\n\n\nTabla\n\ntable(data$`Same-sex sexual activity`)\n\n\n     No Unknown     Yes \n     53       1     185 \n\n\n\n\nReemplazar Yes por 1 , y lo dem√°s por 0 .\n\ndata$`Same-sex sexual activity` <- ifelse(data$`Same-sex sexual activity` == \"Yes\", 1, 0)\n\n\ndata$`Recognition of same-sex unions` <- ifelse(data$`Recognition of same-sex unions` == \"Yes\", 1, 0)\n\n\ndata$`Same-sex marriage` <- ifelse(data$`Same-sex marriage` == \"Yes\", 1, 0)\n\n\ndata$`Adoption by same-sex couples` <- ifelse(data$`Adoption by same-sex couples` == \"Yes\", 1, 0)\n\n\ndata$`LGBT people allowed to serve openly in military?` <- ifelse(data$`LGBT people allowed to serve openly in military?` == \"Yes\", 1, 0)\n\n\ndata$`Anti-discrimination laws concerning sexual orientation` <- ifelse(data$`Anti-discrimination laws concerning sexual orientation` == \"Yes\", 1, 0)\n\n\ndata$`Laws concerning gender identity/expression` <- ifelse(data$`Laws concerning gender identity/expression` == \"Yes\", 1, 0)\n\n\ntable(data$`Laws concerning gender identity/expression`)\n\n\n  0   1 \n126 113"
  },
  {
    "objectID": "semana15_teoria.html",
    "href": "semana15_teoria.html",
    "title": "Clase te√≥rica Semana 15",
    "section": "",
    "text": "Ejercicio de repaso\n\nlibrary(rio)\ndata2=import(\"youtube_data.csv\")\n\n\nnames(data2)\n\n [1] \"video_id\"       \"title\"          \"description\"    \"published_date\"\n [5] \"channel_id\"     \"channel_title\"  \"tags\"           \"category_id\"   \n [9] \"view_count\"     \"like_count\"     \"comment_count\"  \"duration\"      \n[13] \"thumbnail\"     \n\n\n\nstr(data2$view_count)\n\n num [1:600] 8962092 289626 81372201 21255964 2790436 ...\n\nstr(data2$like_count)\n\n num [1:600] 243350 3393 4178447 909386 44278 ...\n\n\n\n\nExiste una relaci√≥n entre el n√∫mero de vistas y el n√∫mero de likes?\n\ncor.test(data2$view_count,data2$like_count)\n\n\n    Pearson's product-moment correlation\n\ndata:  data2$view_count and data2$like_count\nt = 23.975, df = 598, p-value < 2.2e-16\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.6568404 0.7387255\nsample estimates:\n      cor \n0.7000773 \n\n\n\n\nGr√°fico de dispersi√≥n\n\nlibrary(ggplot2)\n\nggplot(data2, aes(x = view_count, y = like_count)) +\n  geom_point() +\n  labs(title = \"Diagrama de dispersi√≥n\", x = \"Eje X\", y = \"Eje Y\") +\n  theme_minimal()\n\n\n\n\n\n\nCalculamos la variable es_tech por si se repite un patr√≥n en tags\n\ndata2$es_tech=ifelse(grepl(\"'tech'\",data2$tags),1,0)\n\n\ntable(data2$es_tech)\n\n\n  0   1 \n538  62 \n\n\n\n\nExiste una diferente de medias del n√∫mero de likes entre los videos que pertenecen al grupo tech o no ?\n\nt.test(like_count~es_tech,data=data2)\n\n\n    Welch Two Sample t-test\n\ndata:  like_count by es_tech\nt = -2.3555, df = 65.953, p-value = 0.02148\nalternative hypothesis: true difference in means between group 0 and group 1 is not equal to 0\n95 percent confidence interval:\n -440840.7  -36354.8\nsample estimates:\nmean in group 0 mean in group 1 \n       192809.5        431407.3 \n\n\n\n\nGr√°fico de barras de error\n\nlibrary(lsr)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\ntabla=data2%>%\n  group_by(es_tech)%>%\n  summarise(\n  promedio=mean(like_count),\n  linferior=ciMean(like_count)[1],\n    lsuperior=ciMean(like_count)[2]\n)\n\ntabla\n\n\n\n  \n\n\n\n\nlibrary(ggplot2)\nggplot(tabla, aes(x = es_tech, y = promedio)) +\n  geom_errorbar(aes(ymin = linferior, ymax = lsuperior), width = 0.2) +\n  labs(x = \"Si es tech o no\", y = \"Media ¬± IC 95%\") +\n  theme_minimal()"
  }
]